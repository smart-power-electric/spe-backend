/* tslint:disable */
/* eslint-disable */
/**
 * Smart Power Electric API
 * Smart Power Electric API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserResponse } from './UserResponse';
import {
    UserResponseFromJSON,
    UserResponseFromJSONTyped,
    UserResponseToJSON,
    UserResponseToJSONTyped,
} from './UserResponse';
import type { RoleResponse } from './RoleResponse';
import {
    RoleResponseFromJSON,
    RoleResponseFromJSONTyped,
    RoleResponseToJSON,
    RoleResponseToJSONTyped,
} from './RoleResponse';

/**
 * 
 * @export
 * @interface AssignRoleResponse
 */
export interface AssignRoleResponse {
    /**
     * User
     * @type {UserResponse}
     * @memberof AssignRoleResponse
     */
    user: UserResponse;
    /**
     * Roles
     * @type {RoleResponse}
     * @memberof AssignRoleResponse
     */
    roles: RoleResponse;
}

/**
 * Check if a given object implements the AssignRoleResponse interface.
 */
export function instanceOfAssignRoleResponse(value: object): value is AssignRoleResponse {
    if (!('user' in value) || value['user'] === undefined) return false;
    if (!('roles' in value) || value['roles'] === undefined) return false;
    return true;
}

export function AssignRoleResponseFromJSON(json: any): AssignRoleResponse {
    return AssignRoleResponseFromJSONTyped(json, false);
}

export function AssignRoleResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssignRoleResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'user': UserResponseFromJSON(json['user']),
        'roles': RoleResponseFromJSON(json['roles']),
    };
}

  export function AssignRoleResponseToJSON(json: any): AssignRoleResponse {
      return AssignRoleResponseToJSONTyped(json, false);
  }

  export function AssignRoleResponseToJSONTyped(value?: AssignRoleResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'user': UserResponseToJSON(value['user']),
        'roles': RoleResponseToJSON(value['roles']),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * Smart Power Electric API
 * Smart Power Electric API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateProjectQuotationRequest
 */
export interface CreateProjectQuotationRequest {
    /**
     * Name of the projectQuotation
     * @type {string}
     * @memberof CreateProjectQuotationRequest
     */
    projectId: string | null;
    /**
     * Material ID of the projectQuotation
     * @type {string}
     * @memberof CreateProjectQuotationRequest
     */
    materialId: string | null;
    /**
     * Service ID of the projectQuotation
     * @type {string}
     * @memberof CreateProjectQuotationRequest
     */
    serviceId: string | null;
    /**
     * Quantity of the projectQuotation
     * @type {number}
     * @memberof CreateProjectQuotationRequest
     */
    quantity: number | null;
    /**
     * Total cost of the projectQuotation
     * @type {number}
     * @memberof CreateProjectQuotationRequest
     */
    totalCost: number | null;
}

/**
 * Check if a given object implements the CreateProjectQuotationRequest interface.
 */
export function instanceOfCreateProjectQuotationRequest(value: object): value is CreateProjectQuotationRequest {
    if (!('projectId' in value) || value['projectId'] === undefined) return false;
    if (!('materialId' in value) || value['materialId'] === undefined) return false;
    if (!('serviceId' in value) || value['serviceId'] === undefined) return false;
    if (!('quantity' in value) || value['quantity'] === undefined) return false;
    if (!('totalCost' in value) || value['totalCost'] === undefined) return false;
    return true;
}

export function CreateProjectQuotationRequestFromJSON(json: any): CreateProjectQuotationRequest {
    return CreateProjectQuotationRequestFromJSONTyped(json, false);
}

export function CreateProjectQuotationRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateProjectQuotationRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'projectId': json['projectId'],
        'materialId': json['materialId'],
        'serviceId': json['serviceId'],
        'quantity': json['quantity'],
        'totalCost': json['totalCost'],
    };
}

  export function CreateProjectQuotationRequestToJSON(json: any): CreateProjectQuotationRequest {
      return CreateProjectQuotationRequestToJSONTyped(json, false);
  }

  export function CreateProjectQuotationRequestToJSONTyped(value?: CreateProjectQuotationRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'projectId': value['projectId'],
        'materialId': value['materialId'],
        'serviceId': value['serviceId'],
        'quantity': value['quantity'],
        'totalCost': value['totalCost'],
    };
}


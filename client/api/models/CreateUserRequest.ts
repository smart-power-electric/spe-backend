/* tslint:disable */
/* eslint-disable */
/**
 * Smart Power Electric API
 * Smart Power Electric API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateUserRequest
 */
export interface CreateUserRequest {
    /**
     * Full name of the user
     * @type {string}
     * @memberof CreateUserRequest
     */
    fullname: string;
    /**
     * Password of the user
     * @type {string}
     * @memberof CreateUserRequest
     */
    password: string;
    /**
     * Email of the user
     * @type {string}
     * @memberof CreateUserRequest
     */
    email: string;
    /**
     * Status of the user
     * @type {string}
     * @memberof CreateUserRequest
     */
    status?: CreateUserRequestStatusEnum | null;
    /**
     * Is the user enabled
     * @type {boolean}
     * @memberof CreateUserRequest
     */
    isEnabled?: boolean | null;
}


/**
 * @export
 */
export const CreateUserRequestStatusEnum = {
    Active: 'active',
    Inactive: 'inactive',
    Pending: 'pending',
    Blocked: 'blocked'
} as const;
export type CreateUserRequestStatusEnum = typeof CreateUserRequestStatusEnum[keyof typeof CreateUserRequestStatusEnum];


/**
 * Check if a given object implements the CreateUserRequest interface.
 */
export function instanceOfCreateUserRequest(value: object): value is CreateUserRequest {
    if (!('fullname' in value) || value['fullname'] === undefined) return false;
    if (!('password' in value) || value['password'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    return true;
}

export function CreateUserRequestFromJSON(json: any): CreateUserRequest {
    return CreateUserRequestFromJSONTyped(json, false);
}

export function CreateUserRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateUserRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'fullname': json['fullname'],
        'password': json['password'],
        'email': json['email'],
        'status': json['status'] == null ? undefined : json['status'],
        'isEnabled': json['isEnabled'] == null ? undefined : json['isEnabled'],
    };
}

  export function CreateUserRequestToJSON(json: any): CreateUserRequest {
      return CreateUserRequestToJSONTyped(json, false);
  }

  export function CreateUserRequestToJSONTyped(value?: CreateUserRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'fullname': value['fullname'],
        'password': value['password'],
        'email': value['email'],
        'status': value['status'],
        'isEnabled': value['isEnabled'],
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * Smart Power Electric API
 * Smart Power Electric API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateClientRequest
 */
export interface UpdateClientRequest {
    /**
     * Name of the client
     * @type {string}
     * @memberof UpdateClientRequest
     */
    name?: string | null;
    /**
     * Address of the client
     * @type {string}
     * @memberof UpdateClientRequest
     */
    address?: string | null;
    /**
     * TIN of the client
     * @type {string}
     * @memberof UpdateClientRequest
     */
    tin?: string | null;
    /**
     * Contact of the client
     * @type {string}
     * @memberof UpdateClientRequest
     */
    contact?: string | null;
    /**
     * Email of the client
     * @type {string}
     * @memberof UpdateClientRequest
     */
    email?: string | null;
    /**
     * Phone of the client
     * @type {string}
     * @memberof UpdateClientRequest
     */
    phone?: string | null;
    /**
     * City of the client
     * @type {string}
     * @memberof UpdateClientRequest
     */
    city?: string | null;
    /**
     * State of the client
     * @type {string}
     * @memberof UpdateClientRequest
     */
    state?: string | null;
    /**
     * Zip of the client
     * @type {string}
     * @memberof UpdateClientRequest
     */
    zip?: string | null;
}

/**
 * Check if a given object implements the UpdateClientRequest interface.
 */
export function instanceOfUpdateClientRequest(value: object): value is UpdateClientRequest {
    return true;
}

export function UpdateClientRequestFromJSON(json: any): UpdateClientRequest {
    return UpdateClientRequestFromJSONTyped(json, false);
}

export function UpdateClientRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateClientRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'address': json['address'] == null ? undefined : json['address'],
        'tin': json['tin'] == null ? undefined : json['tin'],
        'contact': json['contact'] == null ? undefined : json['contact'],
        'email': json['email'] == null ? undefined : json['email'],
        'phone': json['phone'] == null ? undefined : json['phone'],
        'city': json['city'] == null ? undefined : json['city'],
        'state': json['state'] == null ? undefined : json['state'],
        'zip': json['zip'] == null ? undefined : json['zip'],
    };
}

  export function UpdateClientRequestToJSON(json: any): UpdateClientRequest {
      return UpdateClientRequestToJSONTyped(json, false);
  }

  export function UpdateClientRequestToJSONTyped(value?: UpdateClientRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'address': value['address'],
        'tin': value['tin'],
        'contact': value['contact'],
        'email': value['email'],
        'phone': value['phone'],
        'city': value['city'],
        'state': value['state'],
        'zip': value['zip'],
    };
}


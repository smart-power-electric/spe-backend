/* tslint:disable */
/* eslint-disable */
/**
 * Smart Power Electric API
 * Smart Power Electric API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateWorkerRequest
 */
export interface UpdateWorkerRequest {
    /**
     * Name of the worker
     * @type {string}
     * @memberof UpdateWorkerRequest
     */
    name?: string | null;
    /**
     * Speciality of the worker
     * @type {string}
     * @memberof UpdateWorkerRequest
     */
    speciality?: string | null;
    /**
     * Contact of the worker
     * @type {string}
     * @memberof UpdateWorkerRequest
     */
    contact?: string | null;
    /**
     * Email of the worker
     * @type {string}
     * @memberof UpdateWorkerRequest
     */
    address?: string | null;
    /**
     * Phone of the worker
     * @type {string}
     * @memberof UpdateWorkerRequest
     */
    phone?: string | null;
    /**
     * City of the worker
     * @type {string}
     * @memberof UpdateWorkerRequest
     */
    socialSecurity?: string | null;
    /**
     * State of the worker
     * @type {Date}
     * @memberof UpdateWorkerRequest
     */
    startDate?: Date | null;
    /**
     * Zip of the worker
     * @type {Date}
     * @memberof UpdateWorkerRequest
     */
    endDate?: Date | null;
}

/**
 * Check if a given object implements the UpdateWorkerRequest interface.
 */
export function instanceOfUpdateWorkerRequest(value: object): value is UpdateWorkerRequest {
    return true;
}

export function UpdateWorkerRequestFromJSON(json: any): UpdateWorkerRequest {
    return UpdateWorkerRequestFromJSONTyped(json, false);
}

export function UpdateWorkerRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateWorkerRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'speciality': json['speciality'] == null ? undefined : json['speciality'],
        'contact': json['contact'] == null ? undefined : json['contact'],
        'address': json['address'] == null ? undefined : json['address'],
        'phone': json['phone'] == null ? undefined : json['phone'],
        'socialSecurity': json['socialSecurity'] == null ? undefined : json['socialSecurity'],
        'startDate': json['startDate'] == null ? undefined : (new Date(json['startDate'])),
        'endDate': json['endDate'] == null ? undefined : (new Date(json['endDate'])),
    };
}

  export function UpdateWorkerRequestToJSON(json: any): UpdateWorkerRequest {
      return UpdateWorkerRequestToJSONTyped(json, false);
  }

  export function UpdateWorkerRequestToJSONTyped(value?: UpdateWorkerRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'speciality': value['speciality'],
        'contact': value['contact'],
        'address': value['address'],
        'phone': value['phone'],
        'socialSecurity': value['socialSecurity'],
        'startDate': value['startDate'] == null ? undefined : ((value['startDate'] as any).toISOString()),
        'endDate': value['endDate'] == null ? undefined : ((value['endDate'] as any).toISOString()),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * Smart Power Electric API
 * Smart Power Electric API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpsertStageRequest
 */
export interface UpsertStageRequest {
    /**
     * Name of the stage
     * @type {string}
     * @memberof UpsertStageRequest
     */
    name?: string | null;
    /**
     * Description of the stage
     * @type {string}
     * @memberof UpsertStageRequest
     */
    description?: string | null;
    /**
     * Project ID of the stage
     * @type {string}
     * @memberof UpsertStageRequest
     */
    projectId?: string | null;
    /**
     * Percentage of the stage
     * @type {number}
     * @memberof UpsertStageRequest
     */
    percentage?: number | null;
    /**
     * Adjusted percentage of the stage
     * @type {number}
     * @memberof UpsertStageRequest
     */
    adjustedPercentage?: number | null;
    /**
     * Start date of the stage
     * @type {Date}
     * @memberof UpsertStageRequest
     */
    startDate?: Date | null;
    /**
     * End date of the stage
     * @type {Date}
     * @memberof UpsertStageRequest
     */
    endDate?: Date | null;
    /**
     * id of the stage
     * @type {string}
     * @memberof UpsertStageRequest
     */
    id: string | null;
}

/**
 * Check if a given object implements the UpsertStageRequest interface.
 */
export function instanceOfUpsertStageRequest(value: object): value is UpsertStageRequest {
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function UpsertStageRequestFromJSON(json: any): UpsertStageRequest {
    return UpsertStageRequestFromJSONTyped(json, false);
}

export function UpsertStageRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpsertStageRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'projectId': json['projectId'] == null ? undefined : json['projectId'],
        'percentage': json['percentage'] == null ? undefined : json['percentage'],
        'adjustedPercentage': json['adjustedPercentage'] == null ? undefined : json['adjustedPercentage'],
        'startDate': json['startDate'] == null ? undefined : (new Date(json['startDate'])),
        'endDate': json['endDate'] == null ? undefined : (new Date(json['endDate'])),
        'id': json['id'],
    };
}

  export function UpsertStageRequestToJSON(json: any): UpsertStageRequest {
      return UpsertStageRequestToJSONTyped(json, false);
  }

  export function UpsertStageRequestToJSONTyped(value?: UpsertStageRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'description': value['description'],
        'projectId': value['projectId'],
        'percentage': value['percentage'],
        'adjustedPercentage': value['adjustedPercentage'],
        'startDate': value['startDate'] == null ? undefined : ((value['startDate'] as any).toISOString()),
        'endDate': value['endDate'] == null ? undefined : ((value['endDate'] as any).toISOString()),
        'id': value['id'],
    };
}


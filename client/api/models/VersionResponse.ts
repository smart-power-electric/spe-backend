/* tslint:disable */
/* eslint-disable */
/**
 * Smart Power Electric API
 * Smart Power Electric API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface VersionResponse
 */
export interface VersionResponse {
    /**
     * Commit version
     * @type {string}
     * @memberof VersionResponse
     */
    commitVersion: string;
    /**
     * Commit date
     * @type {string}
     * @memberof VersionResponse
     */
    commitDate: string;
    /**
     * Api version
     * @type {string}
     * @memberof VersionResponse
     */
    apiVersion: string;
    /**
     * Date version
     * @type {string}
     * @memberof VersionResponse
     */
    dateVersion: string;
}

/**
 * Check if a given object implements the VersionResponse interface.
 */
export function instanceOfVersionResponse(value: object): value is VersionResponse {
    if (!('commitVersion' in value) || value['commitVersion'] === undefined) return false;
    if (!('commitDate' in value) || value['commitDate'] === undefined) return false;
    if (!('apiVersion' in value) || value['apiVersion'] === undefined) return false;
    if (!('dateVersion' in value) || value['dateVersion'] === undefined) return false;
    return true;
}

export function VersionResponseFromJSON(json: any): VersionResponse {
    return VersionResponseFromJSONTyped(json, false);
}

export function VersionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): VersionResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'commitVersion': json['commitVersion'],
        'commitDate': json['commitDate'],
        'apiVersion': json['apiVersion'],
        'dateVersion': json['dateVersion'],
    };
}

  export function VersionResponseToJSON(json: any): VersionResponse {
      return VersionResponseToJSONTyped(json, false);
  }

  export function VersionResponseToJSONTyped(value?: VersionResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'commitVersion': value['commitVersion'],
        'commitDate': value['commitDate'],
        'apiVersion': value['apiVersion'],
        'dateVersion': value['dateVersion'],
    };
}


-- -- Current sql file was generated after introspecting the database
-- -- If you want to run this migration please uncomment this code before executing migrations

-- CREATE SCHEMA "main";
-- --> statement-breakpoint
-- CREATE SEQUENCE "main"."project_quotation_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1;--> statement-breakpoint
-- CREATE TABLE IF NOT EXISTS "main"."projects" (
-- 	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "main"."main.projects_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
-- 	"client_id" integer,
-- 	"name" varchar,
-- 	"description" text,
-- 	"location" varchar,
-- 	"start_date" date,
-- 	"end_date" date
-- );
-- --> statement-breakpoint
-- CREATE TABLE IF NOT EXISTS "main"."materials" (
-- 	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "main"."main.materials_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
-- 	"name" varchar,
-- 	"unit_cost" numeric
-- );
-- --> statement-breakpoint
-- CREATE TABLE IF NOT EXISTS "main"."stages" (
-- 	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "main"."main.stages_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
-- 	"project_id" integer,
-- 	"name" varchar,
-- 	"description" text,
-- 	"percentage" double precision,
-- 	"adjusted_percentage" double precision,
-- 	"start_date" date,
-- 	"end_date" date
-- );
-- --> statement-breakpoint
-- CREATE TABLE IF NOT EXISTS "main"."project_quotation" (
-- 	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "main"."project_quotation_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1),
-- 	"project_id" integer,
-- 	"material_id" integer,
-- 	"service_id" integer,
-- 	"quantity" integer,
-- 	"total_cost" numeric
-- );
-- --> statement-breakpoint
-- CREATE TABLE IF NOT EXISTS "main"."services" (
-- 	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "main"."main.services_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
-- 	"name" varchar,
-- 	"unit_cost" numeric
-- );
-- --> statement-breakpoint
-- CREATE TABLE IF NOT EXISTS "main"."worker_assignment" (
-- 	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "main"."main.worker_assignment_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
-- 	"worker_id" integer,
-- 	"project_id" integer,
-- 	"stage_id" integer
-- );
-- --> statement-breakpoint
-- CREATE TABLE IF NOT EXISTS "main"."workers" (
-- 	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "main"."main.workers_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
-- 	"name" varchar,
-- 	"specialty" varchar,
-- 	"contact" varchar,
-- 	"address" varchar,
-- 	"phone" varchar,
-- 	"social_security" varchar,
-- 	"start_date" date,
-- 	"end_date" date
-- );
-- --> statement-breakpoint
-- CREATE TABLE IF NOT EXISTS "main"."worker_rates" (
-- 	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "main"."main.worker_rates_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
-- 	"worker_id" integer,
-- 	"rate" numeric,
-- 	"effective_date" date
-- );
-- --> statement-breakpoint
-- CREATE TABLE IF NOT EXISTS "main"."service_sheets" (
-- 	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "main"."main.service_sheets_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
-- 	"worker_id" integer,
-- 	"project_id" integer,
-- 	"week_start_date" date,
-- 	"total_hours" integer
-- );
-- --> statement-breakpoint
-- CREATE TABLE IF NOT EXISTS "main"."worker_payments" (
-- 	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "main"."main.worker_payments_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
-- 	"worker_id" integer,
-- 	"service_sheet_id" integer,
-- 	"total_payment" numeric,
-- 	"payment_date" date,
-- 	"is_extra" boolean
-- );
-- --> statement-breakpoint
-- CREATE TABLE IF NOT EXISTS "main"."notifications" (
-- 	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "main"."main.notifications_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
-- 	"invoice_id" integer,
-- 	"client_id" integer,
-- 	"status" varchar,
-- 	"created_at" timestamp
-- );
-- --> statement-breakpoint
-- CREATE TABLE IF NOT EXISTS "main"."invoices" (
-- 	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "main"."main.invoices_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
-- 	"stage_id" integer,
-- 	"invoice_number" varchar,
-- 	"date" date,
-- 	"total_amount" numeric,
-- 	"show_materials" boolean
-- );
-- --> statement-breakpoint
-- CREATE TABLE IF NOT EXISTS "main"."clients" (
-- 	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "main"."main.clients_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
-- 	"name" varchar,
-- 	"address" varchar,
-- 	"contact" varchar
-- );
-- --> statement-breakpoint
-- DO $$ BEGIN
--  ALTER TABLE "main"."projects" ADD CONSTRAINT "projects_client_id_fkey" FOREIGN KEY ("client_id") REFERENCES "main"."clients"("id") ON DELETE no action ON UPDATE no action;
-- EXCEPTION
--  WHEN duplicate_object THEN null;
-- END $$;
-- --> statement-breakpoint
-- DO $$ BEGIN
--  ALTER TABLE "main"."stages" ADD CONSTRAINT "stages_project_id_fkey" FOREIGN KEY ("project_id") REFERENCES "main"."projects"("id") ON DELETE no action ON UPDATE no action;
-- EXCEPTION
--  WHEN duplicate_object THEN null;
-- END $$;
-- --> statement-breakpoint
-- DO $$ BEGIN
--  ALTER TABLE "main"."project_quotation" ADD CONSTRAINT "project_Quotation_material_id_fkey" FOREIGN KEY ("material_id") REFERENCES "main"."materials"("id") ON DELETE no action ON UPDATE no action;
-- EXCEPTION
--  WHEN duplicate_object THEN null;
-- END $$;
-- --> statement-breakpoint
-- DO $$ BEGIN
--  ALTER TABLE "main"."project_quotation" ADD CONSTRAINT "project_Quotation_project_id_fkey" FOREIGN KEY ("project_id") REFERENCES "main"."projects"("id") ON DELETE no action ON UPDATE no action;
-- EXCEPTION
--  WHEN duplicate_object THEN null;
-- END $$;
-- --> statement-breakpoint
-- DO $$ BEGIN
--  ALTER TABLE "main"."project_quotation" ADD CONSTRAINT "project_Quotation_service_id_fkey" FOREIGN KEY ("service_id") REFERENCES "main"."services"("id") ON DELETE no action ON UPDATE no action;
-- EXCEPTION
--  WHEN duplicate_object THEN null;
-- END $$;
-- --> statement-breakpoint
-- DO $$ BEGIN
--  ALTER TABLE "main"."worker_assignment" ADD CONSTRAINT "worker_assignment_project_id_fkey" FOREIGN KEY ("project_id") REFERENCES "main"."projects"("id") ON DELETE no action ON UPDATE no action;
-- EXCEPTION
--  WHEN duplicate_object THEN null;
-- END $$;
-- --> statement-breakpoint
-- DO $$ BEGIN
--  ALTER TABLE "main"."worker_assignment" ADD CONSTRAINT "worker_assignment_stage_id_fkey" FOREIGN KEY ("stage_id") REFERENCES "main"."stages"("id") ON DELETE no action ON UPDATE no action;
-- EXCEPTION
--  WHEN duplicate_object THEN null;
-- END $$;
-- --> statement-breakpoint
-- DO $$ BEGIN
--  ALTER TABLE "main"."worker_assignment" ADD CONSTRAINT "worker_assignment_worker_id_fkey" FOREIGN KEY ("worker_id") REFERENCES "main"."workers"("id") ON DELETE no action ON UPDATE no action;
-- EXCEPTION
--  WHEN duplicate_object THEN null;
-- END $$;
-- --> statement-breakpoint
-- DO $$ BEGIN
--  ALTER TABLE "main"."worker_rates" ADD CONSTRAINT "worker_rates_worker_id_fkey" FOREIGN KEY ("worker_id") REFERENCES "main"."workers"("id") ON DELETE no action ON UPDATE no action;
-- EXCEPTION
--  WHEN duplicate_object THEN null;
-- END $$;
-- --> statement-breakpoint
-- DO $$ BEGIN
--  ALTER TABLE "main"."service_sheets" ADD CONSTRAINT "service_sheets_project_id_fkey" FOREIGN KEY ("project_id") REFERENCES "main"."projects"("id") ON DELETE no action ON UPDATE no action;
-- EXCEPTION
--  WHEN duplicate_object THEN null;
-- END $$;
-- --> statement-breakpoint
-- DO $$ BEGIN
--  ALTER TABLE "main"."service_sheets" ADD CONSTRAINT "service_sheets_worker_id_fkey" FOREIGN KEY ("worker_id") REFERENCES "main"."workers"("id") ON DELETE no action ON UPDATE no action;
-- EXCEPTION
--  WHEN duplicate_object THEN null;
-- END $$;
-- --> statement-breakpoint
-- DO $$ BEGIN
--  ALTER TABLE "main"."worker_payments" ADD CONSTRAINT "worker_payments_service_sheet_id_fkey" FOREIGN KEY ("service_sheet_id") REFERENCES "main"."service_sheets"("id") ON DELETE no action ON UPDATE no action;
-- EXCEPTION
--  WHEN duplicate_object THEN null;
-- END $$;
-- --> statement-breakpoint
-- DO $$ BEGIN
--  ALTER TABLE "main"."worker_payments" ADD CONSTRAINT "worker_payments_worker_id_fkey" FOREIGN KEY ("worker_id") REFERENCES "main"."workers"("id") ON DELETE no action ON UPDATE no action;
-- EXCEPTION
--  WHEN duplicate_object THEN null;
-- END $$;
-- --> statement-breakpoint
-- DO $$ BEGIN
--  ALTER TABLE "main"."notifications" ADD CONSTRAINT "notifications_client_id_fkey" FOREIGN KEY ("client_id") REFERENCES "main"."clients"("id") ON DELETE no action ON UPDATE no action;
-- EXCEPTION
--  WHEN duplicate_object THEN null;
-- END $$;
-- --> statement-breakpoint
-- DO $$ BEGIN
--  ALTER TABLE "main"."notifications" ADD CONSTRAINT "notifications_invoice_id_fkey" FOREIGN KEY ("invoice_id") REFERENCES "main"."invoices"("id") ON DELETE no action ON UPDATE no action;
-- EXCEPTION
--  WHEN duplicate_object THEN null;
-- END $$;
-- --> statement-breakpoint
-- DO $$ BEGIN
--  ALTER TABLE "main"."invoices" ADD CONSTRAINT "invoices_stage_id_fkey" FOREIGN KEY ("stage_id") REFERENCES "main"."stages"("id") ON DELETE no action ON UPDATE no action;
-- EXCEPTION
--  WHEN duplicate_object THEN null;
-- END $$;